{"version":3,"sources":["Archer.js","App.js","index.js"],"names":["Model","action","group","useRef","previousAction","value","ref","useEffect","current","usePrevious","useGLTF","nodes","materials","animations","actions","useAnimations","fadeOut","stop","play","fadeIn","dispose","rotation","Math","PI","scale","object","Hips","geometry","Erika_Archer_Body_Mesh","material","Body_MAT","skeleton","Erika_Archer_Clothes_Mesh","Akai_MAT","Erika_Archer_Eyelashes_Mesh","Lashes_MAT","Erika_Archer_Eyes_Mesh","EyeSpec_MAT","preload","App","useState","setAction","intensity","position","color","fallback","OrbitControls","className","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"wPAGe,SAASA,EAAT,GAA4B,IAAXC,EAAU,EAAVA,OACxBC,EAAQC,mBACRC,EA0CR,SAAqBC,GAGnB,IAAMC,EAAMH,mBAMZ,OAJAI,qBAAU,WACRD,EAAIE,QAAUH,CACf,GAAE,CAACA,IAEGC,EAAIE,OACZ,CApDwBC,CAAYR,GACnC,EAAyCS,YAAQ,eAAzCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,WAClBC,EAAYC,YAAcF,EAAYX,GAAtCY,QASR,OARAP,qBAAU,WACJH,IACFU,EAAQV,GAAgBY,QAAQ,IAChCF,EAAQb,GAAQgB,QAElBH,EAAQb,GAAQiB,OAChBJ,EAAQb,GAAQkB,OAAO,GACxB,GAAE,CAACL,EAASb,EAAQG,IAEnB,uBAAOE,IAAKJ,EAAOkB,QAAS,KAA5B,SACE,wBAAOC,SAAU,CAACC,KAAKC,GAAK,EAAG,EAAG,GAAIC,MAAO,IAA7C,UACE,2BAAWC,OAAQd,EAAMe,OACzB,6BACEC,SAAUhB,EAAMiB,uBAAuBD,SACvCE,SAAUjB,EAAUkB,SACpBC,SAAUpB,EAAMiB,uBAAuBG,WAEzC,6BACEJ,SAAUhB,EAAMqB,0BAA0BL,SAC1CE,SAAUjB,EAAUqB,SACpBF,SAAUpB,EAAMqB,0BAA0BD,WAE5C,6BACEJ,SAAUhB,EAAMuB,4BAA4BP,SAC5CE,SAAUjB,EAAUuB,WACpBJ,SAAUpB,EAAMuB,4BAA4BH,WAE9C,6BACEJ,SAAUhB,EAAMyB,uBAAuBT,SACvCE,SAAUjB,EAAUyB,YACpBN,SAAUpB,EAAMyB,uBAAuBL,eAKhD,CAEDrB,IAAQ4B,QAAQ,e,MCtCD,SAASC,IACtB,MAA4BC,mBAAS,QAArC,mBAAOvC,EAAP,KAAewC,EAAf,KACA,OACE,qCACE,eAAC,IAAD,WACE,iCACA,4BAAYC,UAAW,EAAGC,SAAU,EAAE,EAAG,EAAG,GAAIC,MAAM,QACtD,4BAAYF,UAAW,EAAGC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,SACrD,4BAAYF,UAAW,EAAGC,SAAU,CAAC,EAAG,GAAI,IAAKC,MAAM,UAEvD,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAAC,EAAD,CAAQ5C,OAAQA,MAElB,cAAC6C,EAAA,EAAD,OAEF,sBAAKC,UAAU,WAAf,UACE,wBACEC,QAAS,WACPP,EAAU,aACX,EAHH,yBAOA,wBACEO,QAAS,WACPP,EAAU,QACX,EAHH,mBAOA,wBACEO,QAAS,WACPP,EAAU,OACX,EAHH,wBAOA,wBACEO,QAAS,WACPP,EAAU,OACX,EAHH,kBAOA,wBACEO,QAAS,WACPP,EAAU,WACX,EAHH,4BAUP,CCxDD,IAAMQ,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACd,EAAD,M","file":"static/js/main.45043991.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nexport default function Model({ action }) {\n  const group = useRef();\n  const previousAction = usePrevious(action);\n  const { nodes, materials, animations } = useGLTF(\"archer.glb\");\n  const { actions } = useAnimations(animations, group);\n  useEffect(() => {\n    if (previousAction) {\n      actions[previousAction].fadeOut(0.2);\n      actions[action].stop();\n    }\n    actions[action].play();\n    actions[action].fadeIn(0.2);\n  }, [actions, action, previousAction]);\n  return (\n    <group ref={group} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>\n        <primitive object={nodes.Hips} />\n        <skinnedMesh\n          geometry={nodes.Erika_Archer_Body_Mesh.geometry}\n          material={materials.Body_MAT}\n          skeleton={nodes.Erika_Archer_Body_Mesh.skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes.Erika_Archer_Clothes_Mesh.geometry}\n          material={materials.Akai_MAT}\n          skeleton={nodes.Erika_Archer_Clothes_Mesh.skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes.Erika_Archer_Eyelashes_Mesh.geometry}\n          material={materials.Lashes_MAT}\n          skeleton={nodes.Erika_Archer_Eyelashes_Mesh.skeleton}\n        />\n        <skinnedMesh\n          geometry={nodes.Erika_Archer_Eyes_Mesh.geometry}\n          material={materials.EyeSpec_MAT}\n          skeleton={nodes.Erika_Archer_Eyes_Mesh.skeleton}\n        />\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"archer.glb\");\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import { Suspense, useState } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport Archer from \"./Archer\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const [action, setAction] = useState(\"Idle\");\n  return (\n    <>\n      <Canvas>\n        <ambientLight />\n        <pointLight intensity={2} position={[-1, 1, 3]} color=\"red\" />\n        <pointLight intensity={2} position={[1, 1, 3]} color=\"blue\" />\n        <pointLight intensity={2} position={[0, 3, -10]} color=\"white\" />\n\n        <Suspense fallback={null}>\n          <Archer action={action} />\n        </Suspense>\n        <OrbitControls />\n      </Canvas>\n      <div className=\"controls\">\n        <button\n          onClick={() => {\n            setAction(\"Runforward\");\n          }}\n        >\n          Run Forward\n        </button>\n        <button\n          onClick={() => {\n            setAction(\"Death\");\n          }}\n        >\n          Death\n        </button>\n        <button\n          onClick={() => {\n            setAction(\"Draw\");\n          }}\n        >\n          Draw Arrow\n        </button>\n        <button\n          onClick={() => {\n            setAction(\"Idle\");\n          }}\n        >\n          Idle\n        </button>\n        <button\n          onClick={() => {\n            setAction(\"Movedown\");\n          }}\n        >\n          Move Down\n        </button>\n      </div>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}
